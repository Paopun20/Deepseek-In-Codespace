name: AI Chat Service - CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/deepseek-in-codespace  # Use your username

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      ollama:
        image: ollama/ollama
        ports:
          - 11434:11434

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        # Add your test command here
        echo "Running tests..."
        # Example: pytest tests/

    - name: Verify Ollama connection
      run: |
        echo "Checking Ollama service..."
        curl -sSf http://localhost:11434/api/tags || (echo "Ollama service unavailable"; exit 1)

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment: production

    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker stop ai-chat-service || true
          docker rm ai-chat-service || true
          docker run -d \
            --name ai-chat-service \
            -p 6969:6969 \
            -v uploads:/app/uploads \
            -e OLLAMA_HOST=http://ollama:11434 \
            --network my-network \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  notify:
    if: always()
    runs-on: ubuntu-latest
    needs: [build-test, docker-build-push, deploy]
    steps:
      - uses: actions/checkout@master
      - name: send custom message
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          color: ${{ job.status == 'success' && '3066993' || '15158332' }}
          message: |
            Job: ${{ github.workflow }}
            Status: ${{ job.status }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Actor: ${{ github.actor }}
            Repository: ${{ github.repository }}